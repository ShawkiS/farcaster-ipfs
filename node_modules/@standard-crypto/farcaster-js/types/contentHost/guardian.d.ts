import { Network, Networkish } from "@ethersproject/networks";
import { AxiosInstance } from "axios";
import { Signer as JWTSigner } from "did-jwt";
import { ContentHost, SignedCast, Directory } from "..";
export declare class FarcasterGuardianContentHost implements ContentHost {
    readonly jwtSigner: JWTSigner;
    readonly canonicalNetwork: Network;
    readonly address: string;
    private readonly axiosInstance;
    static readonly HOST = "guardian.farcaster.xyz";
    constructor(
    /** 64 character hex string or 32 byte array */
    privateKey: string | Uint8Array, network?: Networkish, axiosInstance?: AxiosInstance);
    directoryUrl(): Promise<string>;
    activityUrl(): Promise<string>;
    publishCast(cast: SignedCast): Promise<void>;
    updateDirectory(newDirectory: Directory): Promise<void>;
    private _axiosInterceptor;
}
